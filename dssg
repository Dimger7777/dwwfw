import sys
from PyQt5.QtWidgets import QApplication, QMainWindow, QLabel
from PyQt5.QtCore import Qt, QTimer
import pygetwindow as gw

class OverlayWindow(QMainWindow):
    def __init__(self):
        super().__init__()
        self.setGeometry(0, 0, 1000, 500)
        self.setWindowFlags(Qt.FramelessWindowHint | Qt.WindowStaysOnTopHint)
        self.setAttribute(Qt.WA_TranslucentBackground)
        self.initUI()
        self.counter = 100  # Начальное значение числа

    def initUI(self):
        central_widget = QLabel(self)
        central_widget.setAlignment(Qt.AlignCenter)
        self.setCentralWidget(central_widget)

    def paintEvent(self, event):
        if self.isVisible():
            self.showFullScreen()
            self.centralWidget().setText(f"Counter: {self.counter}")
        else:
            self.showNormal()
            self.centralWidget().clear()

def decrease_counter():
    overlay.counter -= 1
    overlay.repaint()

def check_game_activity():
    active_window = gw.getActiveWindow()
    if active_window is not None and "RAGE Multiplayer" in active_window.title:
        overlay.show()
    else:
        overlay.hide()

if __name__ == "__main__":
    app = QApplication(sys.argv)
    overlay = OverlayWindow()
    overlay.showFullScreen()

    timer_counter = QTimer()
    timer_counter.timeout.connect(decrease_counter)
    timer_counter.start(1000)  # Уменьшение числа каждую секунду

    timer_activity = QTimer()
    timer_activity.timeout.connect(check_game_activity)
    timer_activity.start(1000)  # Проверка активности игры каждую секунду

    check_game_timer = QTimer()
    check_game_timer.timeout.connect(check_game_activity)
    check_game_timer.start(2000)  # Проверка активности игры каждые 2 секунды

    sys.exit(app.exec_())
