from python_imagesearch.imagesearch import *
import pyautogui 
import time 
import tkinter as tk
import pygame.mixer
import keyboard
# Функции для обработки событий кнопок
def turn_on():
    global is_on
    is_on = True
    label.config(text="Состояние: ON")

def turn_off():
    global is_on
    is_on = False
    label.config(text="Состояние: OFF")

def exit_program():
    root.destroy()

# Создаем главное окно
root = tk.Tk()
root.title("Управление")

# Устанавливаем размер окна на 320x400 пикселей
root.geometry("320x400")

# Создаем метку для отображения состояния
label = tk.Label(root, text="Состояние: ")
label.pack()

# Создаем кнопки ON, OFF и EXIT
is_on = False  # Изначально выключено
on_button = tk.Button(root, text="ON", command=turn_on)
on_button.pack()
    
off_button = tk.Button(root, text="OFF", command=turn_off, width=10, height=2)
off_button.pack()

exit_button = tk.Button(root, text="EXIT", command=exit_program, width=10, height=2)
exit_button.pack()

# button_e1 = imagesearch("C:/qwerty/eee.jpg") 
# button_e = imagesearch("C:/qwerty/e.jpg")
# button_q = imagesearch("C:/qwerty/q.jpg")
# НАДО JPG
# Остальной код остается неизменным
keyboard_mapping = {
    'e': 'у',
    'a': 'ф',
    'd': 'в',
    's': 'ы',
    'w': 'ц',
    # Добавьте остальные клавиши по аналогии
}
# Создаем функцию для проверки и выполнения действий
def check_and_execute_actions():
    if is_on:   
        button_e = imagesearch("C:/qwerty/e.jpg") 
        if button_e[0] != -1: 
            print("position: ", button_e[0], button_e[1])
            try:
                keyboard.press_and_release(keyboard_mapping['e'])  # Если возникла ошибка, используем keyboard
            except Exception as e:
                print("Ошибка при использовании pyautogui:", e)
                print("Используем keyboard вместо pyautogui")
                pyautogui.press('e')  # Попробуем выполнить нажатие с помощью pyautogui
        else: 
            print("E не найдена")
        button_a = imagesearch("C:/qwerty/q.jpg") 
        if button_a[0] != -1: 
            print("position: ", button_a[0], button_a[1]) 
            try:
                keyboard.press_and_release(keyboard_mapping['a'])  # Если возникла ошибка, используем keyboard
            except Exception as e:
                print("Ошибка при использовании pyautogui:", e)
                print("Используем keyboard вместо pyautogui")   
                pyautogui.press('a')  # Попробуем выполнить нажатие с помощью pyautogui
        else: 
            print("A не найдена")
        button_d = imagesearch("C:/qwerty/d.jpg") 
        if button_d[0] != -1: 
            print("position: ", button_d[0], button_d[1]) 
            try:
                keyboard.press_and_release(keyboard_mapping['d'])  # Если возникла ошибка, используем keyboard
            except Exception as e:
                print("Ошибка при использовании pyautogui:", e)
                print("Используем keyboard вместо pyautogui")
                
                pyautogui.press('d')  # Попробуем выполнить нажатие с помощью pyautogui
        else: 
            print("D не найдена")
        button_s = imagesearch("C:/qwerty/s.jpg") 
        if button_s[0] != -1: 
            print("position: ", button_s[0], button_s[1]) 
            try:
                keyboard.press_and_release(keyboard_mapping['s'])  # Если возникла ошибка, используем keyboard
            except Exception as e:
                print("Ошибка при использовании pyautogui:", e)
                print("Используем keyboard вместо pyautogui")
                pyautogui.press('s')  # Попробуем выполнить нажатие с помощью pyautogui
        else: 
            print("S не найдена")
        button_w = imagesearch("C:/qwerty/w.jpg") 
        if button_w[0] != -1: 
            print("position: ", button_w[0], button_w[1]) 
            try:
                keyboard.press_and_release(keyboard_mapping['w'])  # Если возникла ошибка, используем keyboard
            except Exception as e:
                print("Ошибка при использовании pyautogui:", e)
                print("Используем keyboard вместо pyautogui")
                pyautogui.press('w')  # Попробуем выполнить нажатие с помощью pyautogui
        else: 
            print("W не найдена")
        button_q2 = imagesearch("C:/qwerty/q2.png")
        if button_q2[0] != -1:
            pygame.mixer.init()
            pygame.mixer.music.load("F:/gfgqw/obratnyiy-otschet-na-ustroystve-27320.mp3")
            pygame.mixer.music.play()

    label.lower()
    root.update()
    root.after(100, check_and_execute_actions)  # Запуск функции через 100 миллисекунд

# Запускаем функцию для проверки и выполнения действий
check_and_execute_actions()

root.mainloop()
